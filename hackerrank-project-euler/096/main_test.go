package main

import "testing"

type sudokuRes struct {
	in, out []string
}

var table = []*sudokuRes{
	{
		in: []string{
			"123456780",
			"456780123",
			"780123456",
			"234567801",
			"567801234",
			"801234567",
			"345678012",
			"678012345",
			"012345678"},
		out: []string{
			"123456789",
			"456789123",
			"789123456",
			"234567891",
			"567891234",
			"891234567",
			"345678912",
			"678912345",
			"912345678"},
	}, {
		in: []string{
			"000260701",
			"680070090",
			"190004500",
			"820100040",
			"004602900",
			"050003028",
			"009300074",
			"040050036",
			"703018000"},
		out: []string{
			"435269781",
			"682571493",
			"197834562",
			"826195347",
			"374682915",
			"951743628",
			"519326874",
			"248957136",
			"763418259"},
	},
	{
		in: []string{
			"000600400",
			"700003600",
			"000091080",
			"000000000",
			"050180003",
			"000306045",
			"040200060",
			"903000000",
			"020000100"},
		out: []string{
			"581672439",
			"792843651",
			"364591782",
			"438957216",
			"256184973",
			"179326845",
			"845219367",
			"912768524",
			"627435198"},
	},
	{
		in: []string{
			"321704000",
			"640090007",
			"000000000",
			"000045900",
			"005187400",
			"004960000",
			"000000000",
			"200070019",
			"000609582",
		},
		out: []string{
			"321754698",
			"648293157",
			"579816234",
			"782345961",
			"965187423",
			"134962875",
			"893521746",
			"256478319",
			"417639582",
		},
	},
}

func compStrs(a, b []string) bool {
	if len(a) != len(b) {
		return false
	}
	for i, va := range a {
		if va != b[i] {
			return false
		}
	}
	return true
}

func TestResult(t *testing.T) {
	for _, data := range table {
		r := getResult(data.in)
		if compStrs(r, data.out) == false {
			t.Errorf("for %v exp %v got %v", data.in, data.out, r)
		}
	}
}
